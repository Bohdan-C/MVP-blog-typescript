{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\mvp-blog-typescript\\\\pages\\\\posts\\\\[postId]\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { useRouter } from 'next/router';\nimport { useDispatch } from \"react-redux\";\nimport { getPostsById } from \"../../../src/redux/actions/actions\";\nexport default _s(function () {\n  _s();\n\n  var dispatch = useDispatch();\n  var router = useRouter();\n  var postId = router.query.postId;\n  React.useEffect(function () {\n    getPostsById(postId, dispatch);\n  }, [postId]); // const { post } = useSelector((state: InitialStateI) => { return { post: state.post } });\n\n  return __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, \"ERROR\");\n}, \"dfK0q129ToldU1hhc+dQGV7CLZ8=\", false, function () {\n  return [useDispatch, useRouter];\n});","map":{"version":3,"sources":["C:/mvp-blog-typescript/pages/posts/[postId]/index.tsx"],"names":["React","useRouter","useDispatch","getPostsById","dispatch","router","postId","query","useEffect"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,WAAT,QAAyC,aAAzC;AACA,SAASC,YAAT;AAGA,kBAAe,YAAM;AAAA;;AACjB,MAAMC,QAAQ,GAAGF,WAAW,EAA5B;AACA,MAAMG,MAAM,GAAGJ,SAAS,EAAxB;AAFiB,MAGTK,MAHS,GAGED,MAAM,CAACE,KAHT,CAGTD,MAHS;AAKjBN,EAAAA,KAAK,CAACQ,SAAN,CAAgB,YAAM;AAClBL,IAAAA,YAAY,CAACG,MAAD,EAASF,QAAT,CAAZ;AACH,GAFD,EAEG,CAACE,MAAD,CAFH,EALiB,CASjB;;AAEA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ;AAGH,CAdD;AAAA,UACqBJ,WADrB,EAEmBD,SAFnB;AAAA","sourcesContent":["import React from 'react';\r\nimport { useRouter } from 'next/router';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getPostsById } from \"../../../src/redux/actions/actions\"\r\nimport {InitialStateI} from \"../../../src/redux/reducers/reducer\"\r\n\r\nexport default () => {\r\n    const dispatch = useDispatch();\r\n    const router = useRouter();\r\n    const { postId } = router.query;\r\n\r\n    React.useEffect(() => {\r\n        getPostsById(postId, dispatch)\r\n    }, [postId]);\r\n\r\n    // const { post } = useSelector((state: InitialStateI) => { return { post: state.post } });\r\n\r\n    return (\r\n        <p>ERROR</p>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}