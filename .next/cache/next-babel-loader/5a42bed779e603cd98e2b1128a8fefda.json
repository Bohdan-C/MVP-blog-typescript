{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\mvp-blog-typescript\\\\pages\\\\posts\\\\[id]\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport { useRouter } from \"next/router\";\nimport styled from \"styled-components\";\nimport { useDispatch } from \"react-redux\";\nimport { getPostsById } from \"../../../src/redux/actions/actions\";\nimport { Navbar } from \"../../../src/components/Navbar\";\nimport Comments from \"../../../src/components/Comments\";\nexport default _s(function () {\n  _s();\n\n  var _useState = useState([]),\n      post = _useState[0],\n      setPost = _useState[1];\n\n  var dispatch = useDispatch();\n  var router = useRouter();\n  var id = router.query.id; // useEffect(() => {\n  //   dispatch(getPostsById)\n  //   axios\n  //     .get(`https://simple-blog-api.crew.red/posts/${id}?_embed=comments`)\n  //     .then((data) => {\n  //       setPost(data.data);\n  //     })\n  //     .catch((err) => {\n  //       console.log(\"Error!\", err);\n  //     });\n  // }, [id]);\n\n  React.useEffect(function () {\n    getPostsById(postId, dispatch);\n  }, [postId]);\n  return __jsx(React.Fragment, null, __jsx(Navbar, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }), __jsx(Container, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, __jsx(Title, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, post.title), __jsx(Description, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, post.body), __jsx(Comments, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  })));\n}, \"T6JdjPKYacF35KjGB/uY4KsH2G4=\", false, function () {\n  return [useDispatch, useRouter];\n});\nvar Container = styled.div.withConfig({\n  displayName: \"id__Container\",\n  componentId: \"sc-1kc1xxg-0\"\n})([\"display:flex;flex-direction:column;align-items:center;margin:0 auto;margin-top:70px;width:1040px;\"]);\n_c = Container;\nvar Title = styled.h2.withConfig({\n  displayName: \"id__Title\",\n  componentId: \"sc-1kc1xxg-1\"\n})([\"width:700px;font-size:50px;margin-bottom:40px;\"]);\n_c2 = Title;\nvar Description = styled.p.withConfig({\n  displayName: \"id__Description\",\n  componentId: \"sc-1kc1xxg-2\"\n})([\"&:after{margin-top:40px;display:block;content:\\\"\\\";background:#000;height:2px;}width:700px;font-size:22px;\"]);\n_c3 = Description;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"Title\");\n$RefreshReg$(_c3, \"Description\");","map":{"version":3,"sources":["C:/mvp-blog-typescript/pages/posts/[id]/index.tsx"],"names":["React","useState","useRouter","styled","useDispatch","getPostsById","Navbar","Comments","post","setPost","dispatch","router","id","query","useEffect","postId","title","body","Container","div","Title","h2","Description","p"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,YAAT;AACA,SAASC,MAAT;AACA,OAAOC,QAAP;AAEA,kBAAe,YAAM;AAAA;;AAAA,kBACKN,QAAQ,CAAC,EAAD,CADb;AAAA,MACZO,IADY;AAAA,MACNC,OADM;;AAGnB,MAAMC,QAAQ,GAAGN,WAAW,EAA5B;AACA,MAAMO,MAAM,GAAGT,SAAS,EAAxB;AAJmB,MAKXU,EALW,GAKJD,MAAM,CAACE,KALH,CAKXD,EALW,EAOnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAZ,EAAAA,KAAK,CAACc,SAAN,CAAgB,YAAM;AACpBT,IAAAA,YAAY,CAACU,MAAD,EAASL,QAAT,CAAZ;AACH,GAFC,EAEC,CAACK,MAAD,CAFD;AAIA,SACE,4BACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQP,IAAI,CAACQ,KAAb,CADF,EAEE,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAcR,IAAI,CAACS,IAAnB,CAFF,EAGE,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CAFF,CADF;AAUD,CAjCD;AAAA,UAGmBb,WAHnB,EAIiBF,SAJjB;AAAA;AAmCA,IAAMgB,SAAS,GAAGf,MAAM,CAACgB,GAAV;AAAA;AAAA;AAAA,yGAAf;KAAMD,S;AASN,IAAME,KAAK,GAAGjB,MAAM,CAACkB,EAAV;AAAA;AAAA;AAAA,sDAAX;MAAMD,K;AAMN,IAAME,WAAW,GAAGnB,MAAM,CAACoB,CAAV;AAAA;AAAA;AAAA,kHAAjB;MAAMD,W","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useRouter } from \"next/router\";\r\nimport styled from \"styled-components\";\r\nimport axios from \"axios\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { getPostsById } from \"../../../src/redux/actions/actions\";\r\nimport { Navbar } from \"../../../src/components/Navbar\";\r\nimport Comments from \"../../../src/components/Comments\";\r\n\r\nexport default () => {\r\n  const [post, setPost] = useState([]);\r\n\r\n  const dispatch = useDispatch();\r\n  const router = useRouter();\r\n  const { id } = router.query;\r\n\r\n  // useEffect(() => {\r\n  //   dispatch(getPostsById)\r\n  //   axios\r\n  //     .get(`https://simple-blog-api.crew.red/posts/${id}?_embed=comments`)\r\n  //     .then((data) => {\r\n  //       setPost(data.data);\r\n  //     })\r\n  //     .catch((err) => {\r\n  //       console.log(\"Error!\", err);\r\n  //     });\r\n  // }, [id]);\r\n\r\n  React.useEffect(() => {\r\n    getPostsById(postId, dispatch)\r\n}, [postId]);\r\n\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      <Container>\r\n        <Title>{post.title}</Title>\r\n        <Description>{post.body}</Description>\r\n        <Comments />\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  margin: 0 auto;\r\n  margin-top: 70px;\r\n  width: 1040px;\r\n`;\r\n\r\nconst Title = styled.h2`\r\n  width: 700px;\r\n  font-size: 50px;\r\n  margin-bottom: 40px;\r\n`;\r\n\r\nconst Description = styled.p`\r\n  &:after {\r\n    margin-top: 40px;\r\n    display: block;\r\n    content: \"\";\r\n    background: #000;\r\n    height: 2px;\r\n  }\r\n  width: 700px;\r\n  font-size: 22px;\r\n`;"]},"metadata":{},"sourceType":"module"}