{"ast":null,"code":"import axios from 'axios';\nimport { POSTS_FAIL, POSTS_LOADING, POSTS_SUCCESS, POST_SUCCESS, POST_ADD_SUCCESS } from \"../types/types\";\n\nconst postsLoading = () => ({\n  type: POSTS_LOADING\n});\n\nconst successData = data => ({\n  type: POSTS_SUCCESS,\n  payload: data\n});\n\nconst errorData = error => ({\n  type: POSTS_FAIL,\n  payload: error\n});\n\nconst successPost = data => ({\n  type: POST_SUCCESS,\n  payload: data\n});\n\nconst successAddData = () => ({\n  type: POST_ADD_SUCCESS\n});\n\nconst getPosts = () => dispatch => {\n  postsLoading();\n  axios.get('https://simple-blog-api.crew.red/posts').then(res => dispatch(successData(res.data))).catch(error => dispatch(errorData(error))).finally(() => postsLoading());\n}; // const getPostsById = (id: string | string[]) => (dispatch: Function) => {\n//     if (id === undefined) return;\n//   axios\n//     .get(`https://simple-blog-api.crew.red/posts/${id}?_embed=comments`)\n//     .then((res) => dispatch(successPost(res.data)))\n// };\n\n\nexport function getPostsById(id, dispatch) {\n  if (id === undefined) return;\n  axios(`https://simple-blog-api.crew.red/posts/${id}?_embed=comments`).then(res => dispatch(successPost(res.data)));\n}\n;\n;\n\nconst addPost = (newPost, dispatch) => dispatch => {\n  axios({\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    data: JSON.stringify(newPost),\n    url: 'https://simple-blog-api.crew.red/posts'\n  }).then(res => console.log(res));\n};\n\nexport { getPosts, getPostsById, addPost };","map":{"version":3,"sources":["C:/mvp-blog-typescript/src/redux/actions/actions.ts"],"names":["axios","POSTS_FAIL","POSTS_LOADING","POSTS_SUCCESS","POST_SUCCESS","POST_ADD_SUCCESS","postsLoading","type","successData","data","payload","errorData","error","successPost","successAddData","getPosts","dispatch","get","then","res","catch","finally","getPostsById","id","undefined","addPost","newPost","method","headers","JSON","stringify","url","console","log"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,EAAqBC,aAArB,EAAoCC,aAApC,EAAmDC,YAAnD,EAAiEC,gBAAjE;;AAEA,MAAMC,YAAY,GAAG,OAAO;AAC1BC,EAAAA,IAAI,EAAEL;AADoB,CAAP,CAArB;;AAIA,MAAMM,WAAW,GAAIC,IAAD,KAAW;AAC7BF,EAAAA,IAAI,EAAEJ,aADuB;AAE7BO,EAAAA,OAAO,EAAED;AAFoB,CAAX,CAApB;;AAKA,MAAME,SAAS,GAAIC,KAAD,KAAY;AAC5BL,EAAAA,IAAI,EAAEN,UADsB;AAE5BS,EAAAA,OAAO,EAAEE;AAFmB,CAAZ,CAAlB;;AAKA,MAAMC,WAAW,GAAIJ,IAAD,KAAW;AAC3BF,EAAAA,IAAI,EAAEH,YADqB;AAE3BM,EAAAA,OAAO,EAAED;AAFkB,CAAX,CAApB;;AAKA,MAAMK,cAAc,GAAG,OAAO;AAC5BP,EAAAA,IAAI,EAAEF;AADsB,CAAP,CAAvB;;AAKA,MAAMU,QAAQ,GAAG,MAAOC,QAAD,IAAwB;AAC7CV,EAAAA,YAAY;AACZN,EAAAA,KAAK,CACFiB,GADH,CACO,wCADP,EAEGC,IAFH,CAESC,GAAD,IAASH,QAAQ,CAACR,WAAW,CAACW,GAAG,CAACV,IAAL,CAAZ,CAFzB,EAGGW,KAHH,CAGUR,KAAD,IAAWI,QAAQ,CAACL,SAAS,CAACC,KAAD,CAAV,CAH5B,EAIGS,OAJH,CAIW,MAAMf,YAAY,EAJ7B;AAKD,CAPD,C,CASA;AACA;AACA;AACA;AACA;AACA;;;AAEA,OAAO,SAASgB,YAAT,CAAsBC,EAAtB,EAA6CP,QAA7C,EAAiE;AACtE,MAAIO,EAAE,KAAKC,SAAX,EAAsB;AACtBxB,EAAAA,KAAK,CAAE,0CAAyCuB,EAAG,kBAA9C,CAAL,CACCL,IADD,CACOC,GAAD,IAASH,QAAQ,CAACH,WAAW,CAACM,GAAG,CAACV,IAAL,CAAZ,CADvB;AAED;AAAA;AAKA;;AAED,MAAMgB,OAAO,GAAG,CAACC,OAAD,EAAmBV,QAAnB,KAA2CA,QAAD,IAAwB;AAC9EhB,EAAAA,KAAK,CAAC;AACJ2B,IAAAA,MAAM,EAAE,MADJ;AAEJC,IAAAA,OAAO,EAAE;AAAE,sBAAgB;AAAlB,KAFL;AAGJnB,IAAAA,IAAI,EAAEoB,IAAI,CAACC,SAAL,CAAeJ,OAAf,CAHF;AAIJK,IAAAA,GAAG,EAAE;AAJD,GAAD,CAAL,CAMDb,IANC,CAMKC,GAAD,IAASa,OAAO,CAACC,GAAR,CAAYd,GAAZ,CANb;AAOH,CARD;;AAUA,SAASJ,QAAT,EAAmBO,YAAnB,EAAiCG,OAAjC","sourcesContent":["import axios from 'axios';\r\nimport { POSTS_FAIL, POSTS_LOADING, POSTS_SUCCESS, POST_SUCCESS, POST_ADD_SUCCESS } from '../types/types';\r\n\r\nconst postsLoading = () => ({\r\n  type: POSTS_LOADING,\r\n});\r\n\r\nconst successData = (data) => ({\r\n  type: POSTS_SUCCESS,\r\n  payload: data,\r\n});\r\n\r\nconst errorData = (error) => ({\r\n  type: POSTS_FAIL,\r\n  payload: error,\r\n});\r\n\r\nconst successPost = (data) => ({\r\n    type: POST_SUCCESS,\r\n    payload: data,\r\n})\r\n\r\nconst successAddData = () => ({\r\n  type: POST_ADD_SUCCESS,\r\n})\r\n\r\n\r\nconst getPosts = () => (dispatch: Function) => {\r\n  postsLoading();\r\n  axios\r\n    .get('https://simple-blog-api.crew.red/posts')\r\n    .then((res) => dispatch(successData(res.data)))\r\n    .catch((error) => dispatch(errorData(error)))\r\n    .finally(() => postsLoading());\r\n};\r\n\r\n// const getPostsById = (id: string | string[]) => (dispatch: Function) => {\r\n//     if (id === undefined) return;\r\n//   axios\r\n//     .get(`https://simple-blog-api.crew.red/posts/${id}?_embed=comments`)\r\n//     .then((res) => dispatch(successPost(res.data)))\r\n// };\r\n\r\nexport function getPostsById(id: string | string[], dispatch: Function) {\r\n  if (id === undefined) return;\r\n  axios(`https://simple-blog-api.crew.red/posts/${id}?_embed=comments`)\r\n  .then((res) => dispatch(successPost(res.data)))\r\n};\r\n\r\ninterface newPost {\r\n  title: string,\r\n  body: string\r\n};\r\n\r\nconst addPost = (newPost: newPost, dispatch: Function) => (dispatch: Function) => {\r\n    axios({\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      data: JSON.stringify(newPost),\r\n      url: 'https://simple-blog-api.crew.red/posts'\r\n  })\r\n  .then((res) => console.log(res));\r\n}\r\n\r\nexport { getPosts, getPostsById, addPost };\r\n"]},"metadata":{},"sourceType":"module"}