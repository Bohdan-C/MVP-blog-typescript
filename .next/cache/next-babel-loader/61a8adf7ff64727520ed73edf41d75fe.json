{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\mvp-blog-typescript\\\\src\\\\components\\\\Comments.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useDispatch } from \"react-redux\";\nimport { getPostsById } from \"../redux/actions/actions\";\nimport { useRouter } from \"next/router\"; // import styled from \"styled-components\";\n// import { InitialStateI } from \"../redux/reducers/reducer\";\n\nexport default _s(function () {\n  _s();\n\n  var _ref = useState > [],\n      _ref2 = _slicedToArray(_ref, 2),\n      comments = _ref2[0],\n      setComments = _ref2[1];\n\n  var dispatch = useDispatch();\n  var router = useRouter();\n  var postId = router.query.postId;\n  useEffect(function () {\n    dispatch(getPostsById);\n    axios.get(\"https://simple-blog-api.crew.red/posts/\".concat(postId, \"?_embed=comments\")).then(function (data) {\n      console.log(\"data.data :>> \", data.data.comments);\n      setComments(data.data.comments);\n    })[\"catch\"](function (err) {\n      console.log(\"Error!\", err);\n    });\n  }, [postId]);\n  return __jsx(\"ul\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, comments.map(function (comment) {\n    __jsx(\"li\", {\n      key: comment.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }\n    }, comment.body);\n  }));\n}, \"dfK0q129ToldU1hhc+dQGV7CLZ8=\", false, function () {\n  return [useDispatch, useRouter];\n});","map":{"version":3,"sources":["C:/mvp-blog-typescript/src/components/Comments.tsx"],"names":["React","useState","useEffect","axios","useDispatch","getPostsById","useRouter","comments","setComments","dispatch","router","postId","query","get","then","data","console","log","err","map","comment","id","body"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,YAAT;AACA,SAASC,SAAT,QAA0B,aAA1B,C,CACA;AACA;;AAGA,kBAAe,YAAM;AAAA;;AAAA,aACeL,QAAQ,GAAE,EADzB;AAAA;AAAA,MACVM,QADU;AAAA,MACAC,WADA;;AAGjB,MAAMC,QAAQ,GAAGL,WAAW,EAA5B;AACA,MAAMM,MAAM,GAAGJ,SAAS,EAAxB;AAJiB,MAKTK,MALS,GAKED,MAAM,CAACE,KALT,CAKTD,MALS;AAOjBT,EAAAA,SAAS,CAAC,YAAM;AACdO,IAAAA,QAAQ,CAACJ,YAAD,CAAR;AACAF,IAAAA,KAAK,CACFU,GADH,kDACiDF,MADjD,uBAEGG,IAFH,CAEQ,UAACC,IAAD,EAAU;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BF,IAAI,CAACA,IAAL,CAAUR,QAAxC;AACAC,MAAAA,WAAW,CAACO,IAAI,CAACA,IAAL,CAAUR,QAAX,CAAX;AACD,KALH,WAMS,UAACW,GAAD,EAAS;AACdF,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBC,GAAtB;AACD,KARH;AASD,GAXQ,EAWN,CAACP,MAAD,CAXM,CAAT;AAYF,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,QAAQ,CAACY,GAAT,CAAa,UAACC,OAAD,EAAa;AACvB;AAAI,MAAA,GAAG,EAAEA,OAAO,CAACC,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGD,OAAO,CAACE,IADX,CADwB;AAK3B,GALA,CADH,CADF;AAUD,CA7BD;AAAA,UAGqBlB,WAHrB,EAImBE,SAJnB;AAAA","sourcesContent":["import React, {useState, useEffect} from \"react\";\r\nimport axios from \"axios\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { getPostsById } from \"../redux/actions/actions\";\r\nimport { useRouter } from \"next/router\";\r\n// import styled from \"styled-components\";\r\n// import { InitialStateI } from \"../redux/reducers/reducer\";\r\nimport {CommentI} from \"../redux/reducers/reducer\"\r\n\r\nexport default () => {\r\n    const [comments, setComments] = useState>([]);\r\n\r\n    const dispatch = useDispatch();\r\n    const router = useRouter();\r\n    const { postId } = router.query;\r\n  \r\n    useEffect(() => {\r\n      dispatch(getPostsById);\r\n      axios\r\n        .get(`https://simple-blog-api.crew.red/posts/${postId}?_embed=comments`)\r\n        .then((data) => {\r\n          console.log(\"data.data :>> \", data.data.comments);\r\n          setComments(data.data.comments);\r\n        })\r\n        .catch((err) => {\r\n          console.log(\"Error!\", err);\r\n        });\r\n    }, [postId]);\r\n  return (\r\n    <ul>\r\n      {comments.map((comment) => {(\r\n          <li key={comment.id}>\r\n            {comment.body}\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}