{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { POSTS_FAIL, POSTS_LOADING, POSTS_SUCCESS, POST_SUCCESS, POST_ADD_SUCCESS } from \"../types/types\";\nvar initialState = {\n  posts: [],\n  title: \"\",\n  body: \"\",\n  comment: \"\",\n  isLoading: false\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case POSTS_LOADING:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoading: !state.isLoading\n      });\n\n    case POSTS_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        posts: _toConsumableArray(action.payload)\n      });\n\n    case POSTS_FAIL:\n      return state;\n\n    case POST_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        post: action.post\n      });\n\n    case POST_ADD_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        title: \"\",\n        body: \"\"\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/mvp-blog-typescript/src/redux/reducers/reducer.ts"],"names":["POSTS_FAIL","POSTS_LOADING","POSTS_SUCCESS","POST_SUCCESS","POST_ADD_SUCCESS","initialState","posts","title","body","comment","isLoading","reducer","state","action","type","payload","post"],"mappings":";;;;;;;AAAA,SACEA,UADF,EAEEC,aAFF,EAGEC,aAHF,EAIEC,YAJF,EAKEC,gBALF;AA4BA,IAAMC,YAA2B,GAAG;AAClCC,EAAAA,KAAK,EAAE,EAD2B;AAElCC,EAAAA,KAAK,EAAE,EAF2B;AAGlCC,EAAAA,IAAI,EAAE,EAH4B;AAIlCC,EAAAA,OAAO,EAAE,EAJyB;AAKlCC,EAAAA,SAAS,EAAE;AALuB,CAApC;;AAQA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAsD;AAAA,MAArDC,KAAqD,uEAA9BP,YAA8B;AAAA,MAAhBQ,MAAgB;;AACpE,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKb,aAAL;AACE,6CAAYW,KAAZ;AAAmBF,QAAAA,SAAS,EAAE,CAACE,KAAK,CAACF;AAArC;;AAEF,SAAKR,aAAL;AACE,6CAAYU,KAAZ;AAAmBN,QAAAA,KAAK,qBAAMO,MAAM,CAACE,OAAb;AAAxB;;AAEF,SAAKf,UAAL;AACE,aAAOY,KAAP;;AAEF,SAAKT,YAAL;AACE,6CAAYS,KAAZ;AAAmBI,QAAAA,IAAI,EAAEH,MAAM,CAACG;AAAhC;;AAEF,SAAKZ,gBAAL;AACE,6CAAYQ,KAAZ;AAAmBL,QAAAA,KAAK,EAAE,EAA1B;AAA8BC,QAAAA,IAAI,EAAE;AAApC;;AAEF;AACE,aAAOI,KAAP;AAjBJ;AAmBD,CApBD;;AAsBA,eAAeD,OAAf","sourcesContent":["import {\r\n  POSTS_FAIL,\r\n  POSTS_LOADING,\r\n  POSTS_SUCCESS,\r\n  POST_SUCCESS,\r\n  POST_ADD_SUCCESS,\r\n} from \"../types/types\";\r\n\r\nexport interface CommentI {\r\n  id: number;\r\n  postId: number;\r\n  body: string;\r\n}\r\nexport interface post {\r\n  id: number;\r\n  title: string;\r\n  body: string;\r\n  comments?: Array<CommentI>;\r\n}\r\nexport interface InitialStateI {\r\n  posts: Array<post>;\r\n  isLoading: boolean;\r\n  comment: string;\r\n  title: string;\r\n  body: string;\r\n  post?: post;\r\n}\r\n\r\nconst initialState: InitialStateI = {\r\n  posts: [],\r\n  title: \"\",\r\n  body: \"\",\r\n  comment: \"\",\r\n  isLoading: false,\r\n};\r\n\r\nconst reducer = (state: InitialStateI = initialState, action: any) => {\r\n  switch (action.type) {\r\n    case POSTS_LOADING:\r\n      return { ...state, isLoading: !state.isLoading };\r\n\r\n    case POSTS_SUCCESS:\r\n      return { ...state, posts: [...action.payload] };\r\n\r\n    case POSTS_FAIL:\r\n      return state;\r\n\r\n    case POST_SUCCESS:\r\n      return { ...state, post: action.post };\r\n\r\n    case POST_ADD_SUCCESS:\r\n      return { ...state, title: \"\", body: \"\" };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n"]},"metadata":{},"sourceType":"module"}