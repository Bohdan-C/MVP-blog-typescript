{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\mvp-blog-typescript\\\\src\\\\components\\\\Comments.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useDispatch } from \"react-redux\";\nimport { getPostsById } from \"../redux/actions/actions\";\nimport { useRouter } from \"next/router\"; // import styled from \"styled-components\";\n// import { InitialStateI } from \"../redux/reducers/reducer\";\n\nexport default _s(function () {\n  _s();\n\n  var _useState = useState([]),\n      commentsArr = _useState[0],\n      setCommentsArr = _useState[1];\n\n  var dispatch = useDispatch();\n  var router = useRouter();\n  var postId = router.query.postId;\n  var id = {\n    postId: postId\n  };\n  useEffect(function () {\n    dispatch(getPostsById);\n    axios.get(\"https://simple-blog-api.crew.red/posts/\".concat(postId, \"?_embed=comments\")).then(function (data) {\n      setCommentsArr(data.data.comments);\n    })[\"catch\"](function (err) {\n      console.log(\"Error!\", err);\n    });\n  }, [id]);\n  return __jsx(\"ul\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, commentsArr.map(function (comment) {\n    return __jsx(\"li\", {\n      key: comment.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }\n    }, __jsx(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }\n    }, comment.body));\n  }));\n}, \"K4DB+yq1ngfm8gF86HfJgCoBJ9g=\", false, function () {\n  return [useDispatch, useRouter];\n});","map":{"version":3,"sources":["C:/mvp-blog-typescript/src/components/Comments.tsx"],"names":["React","useState","useEffect","axios","useDispatch","getPostsById","useRouter","commentsArr","setCommentsArr","dispatch","router","postId","query","id","get","then","data","comments","err","console","log","map","comment","body"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,YAAT;AACA,SAASC,SAAT,QAA0B,aAA1B,C,CACA;AACA;;AAGA,kBAAe,YAAM;AAAA;;AAAA,kBACmBL,QAAQ,CAAC,EAAD,CAD3B;AAAA,MACZM,WADY;AAAA,MACCC,cADD;;AAGnB,MAAMC,QAAQ,GAAGL,WAAW,EAA5B;AACA,MAAMM,MAAM,GAAGJ,SAAS,EAAxB;AAJmB,MAKXK,MALW,GAKAD,MAAM,CAACE,KALP,CAKXD,MALW;AAMnB,MAAME,EAAE,GAAG;AAAEF,IAAAA,MAAM,EAANA;AAAF,GAAX;AAEAT,EAAAA,SAAS,CAAC,YAAM;AACdO,IAAAA,QAAQ,CAACJ,YAAD,CAAR;AACAF,IAAAA,KAAK,CACFW,GADH,kDACiDH,MADjD,uBAEGI,IAFH,CAEQ,UAACC,IAAD,EAAU;AACdR,MAAAA,cAAc,CAACQ,IAAI,CAACA,IAAL,CAAUC,QAAX,CAAd;AACD,KAJH,WAKS,UAACC,GAAD,EAAS;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBF,GAAtB;AACD,KAPH;AAQD,GAVQ,EAUN,CAACL,EAAD,CAVM,CAAT;AAWA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGN,WAAW,CAACc,GAAZ,CAAgB,UAACC,OAAD;AAAA,WACf;AAAI,MAAA,GAAG,EAAEA,OAAO,CAACT,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIS,OAAO,CAACC,IAAZ,CADF,CADe;AAAA,GAAhB,CADH,CADF;AASD,CA5BD;AAAA,UAGmBnB,WAHnB,EAIiBE,SAJjB;AAAA","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { getPostsById } from \"../redux/actions/actions\";\r\nimport { useRouter } from \"next/router\";\r\n// import styled from \"styled-components\";\r\n// import { InitialStateI } from \"../redux/reducers/reducer\";\r\nimport { CommentI } from \"../redux/reducers/reducer\";\r\n\r\nexport default () => {\r\n  const [commentsArr, setCommentsArr] = useState([]);\r\n\r\n  const dispatch = useDispatch();\r\n  const router = useRouter();\r\n  const { postId } = router.query;\r\n  const id = { postId }\r\n\r\n  useEffect(() => {\r\n    dispatch(getPostsById);\r\n    axios\r\n      .get(`https://simple-blog-api.crew.red/posts/${postId}?_embed=comments`)\r\n      .then((data) => {\r\n        setCommentsArr(data.data.comments);\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"Error!\", err);\r\n      });\r\n  }, [id]);\r\n  return (\r\n    <ul>\r\n      {commentsArr.map((comment) => (\r\n        <li key={comment.id}>\r\n          <p>{comment.body}</p>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}