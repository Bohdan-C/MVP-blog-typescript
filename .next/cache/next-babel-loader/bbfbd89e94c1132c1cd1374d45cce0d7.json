{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\mvp-blog-typescript\\\\src\\\\components\\\\CreateComment.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport axios from \"axios\";\nimport { useRouter } from \"next/router\"; // import { addComment } from \"../redux/actions/actions\";\n\n;\nexport default _s(function () {\n  var _useState2;\n\n  _s();\n\n  var router = useRouter();\n  var postId = router.query.postId;\n  console.log(\"postId :>> \", postId);\n  var IDS = {\n    BODY: \"body\",\n    POST_ID: \"postId\"\n  };\n\n  var _useState = useState((_useState2 = {}, _defineProperty(_useState2, IDS.MESSEGE, \"\"), _defineProperty(_useState2, IDS.POST_ID, \"\"), _useState2)),\n      state = _useState[0],\n      setState = _useState[1];\n\n  console.log(\"state :>> \", state);\n\n  var onChange = function onChange(event) {\n    var _event$target = event.target,\n        id = _event$target.id,\n        value = _event$target.value;\n    setState(function (currentState) {\n      return _objectSpread(_objectSpread({}, currentState), {}, _defineProperty({}, id, value));\n    });\n  };\n\n  var addComment = function addComment(event) {\n    event.preventDefault();\n    axios({\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      data: JSON.stringify(state),\n      url: \"https://simple-blog-api.crew.red/comments\"\n    }).then(function (res) {\n      return console.log(res);\n    });\n  };\n\n  return __jsx(\"form\", {\n    onSubmit: addComment,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, __jsx(Input, {\n    id: IDS.MESSEGE,\n    value: state[IDS.MESSEGE],\n    onChange: onChange,\n    placeholder: \"Comment...\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }), __jsx(Btn, {\n    type: \"submit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, \"Send comment\"));\n}, \"X2xMSEFafhKw2fyTaRcecbIdNxM=\", false, function () {\n  return [useRouter];\n});\nvar Input = styled.input.withConfig({\n  displayName: \"CreateComment__Input\",\n  componentId: \"t6ryb5-0\"\n})([\"padding-left:25px;font-size:16px;width:549px;height:45px;margin-top:40px;border:none;border-radius:10px;box-shadow:inset 0 0 7px rgba(0,0,0,0.2);\"]);\n_c = Input;\nvar Btn = styled.button.withConfig({\n  displayName: \"CreateComment__Btn\",\n  componentId: \"t6ryb5-1\"\n})([\"margin-left:12px;border:none;border-radius:10px;background:#fff;width:110px;height:45px;box-shadow:0px 0px 5px 0px rgba(0,0,0,0.35);\"]);\n_c2 = Btn;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Input\");\n$RefreshReg$(_c2, \"Btn\");","map":{"version":3,"sources":["C:/mvp-blog-typescript/src/components/CreateComment.tsx"],"names":["React","useState","styled","axios","useRouter","router","postId","query","console","log","IDS","BODY","POST_ID","MESSEGE","state","setState","onChange","event","target","id","value","currentState","addComment","preventDefault","method","headers","data","JSON","stringify","url","then","res","Input","input","Btn","button"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,aAA1B,C,CACA;;AAKG;AAEH,kBAAe,YAAM;AAAA;;AAAA;;AACnB,MAAMC,MAAM,GAAGD,SAAS,EAAxB;AADmB,MAEXE,MAFW,GAEAD,MAAM,CAACE,KAFP,CAEXD,MAFW;AAInBE,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BH,MAA3B;AAEA,MAAMI,GAAG,GAAG;AACVC,IAAAA,IAAI,EAAE,MADI;AAEVC,IAAAA,OAAO,EAAE;AAFC,GAAZ;;AANmB,kBAWOX,QAAQ,+CAC/BS,GAAG,CAACG,OAD2B,EACjB,EADiB,+BAE/BH,GAAG,CAACE,OAF2B,EAEjB,EAFiB,eAXf;AAAA,MAWZE,KAXY;AAAA,MAWLC,QAXK;;AAgBnBP,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BK,KAA1B;;AAEA,MAAME,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAAW;AAAA,wBACJA,KAAK,CAACC,MADF;AAAA,QAClBC,EADkB,iBAClBA,EADkB;AAAA,QACdC,KADc,iBACdA,KADc;AAG1BL,IAAAA,QAAQ,CAAC,UAACM,YAAD;AAAA,6CACJA,YADI,2BAENF,EAFM,EAEDC,KAFC;AAAA,KAAD,CAAR;AAID,GAPD;;AASE,MAAME,UAAU,GAAG,SAAbA,UAAa,CAACL,KAAD,EAAW;AAC5BA,IAAAA,KAAK,CAACM,cAAN;AACApB,IAAAA,KAAK,CAAC;AACJqB,MAAAA,MAAM,EAAE,MADJ;AAEJC,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB,OAFL;AAGJC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAed,KAAf,CAHF;AAIJe,MAAAA,GAAG,EAAE;AAJD,KAAD,CAAL,CAKGC,IALH,CAKQ,UAACC,GAAD;AAAA,aAASvB,OAAO,CAACC,GAAR,CAAYsB,GAAZ,CAAT;AAAA,KALR;AAMD,GARD;;AAUF,SACE;AAAM,IAAA,QAAQ,EAAET,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD;AACE,IAAA,EAAE,EAAEZ,GAAG,CAACG,OADV;AAEE,IAAA,KAAK,EAAEC,KAAK,CAACJ,GAAG,CAACG,OAAL,CAFd;AAGE,IAAA,QAAQ,EAAEG,QAHZ;AAIE,IAAA,WAAW,EAAC,YAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAOE,MAAC,GAAD;AAAK,IAAA,IAAI,EAAC,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAPF,CADF;AAWD,CAhDD;AAAA,UACiBZ,SADjB;AAAA;AAkDA,IAAM4B,KAAK,GAAG9B,MAAM,CAAC+B,KAAV;AAAA;AAAA;AAAA,yJAAX;KAAMD,K;AAWN,IAAME,GAAG,GAAGhC,MAAM,CAACiC,MAAV;AAAA;AAAA;AAAA,4IAAT;MAAMD,G","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport axios from \"axios\";\r\nimport { useRouter } from \"next/router\";\r\n// import { addComment } from \"../redux/actions/actions\";\r\n\r\ninterface Icomment {\r\n    POST_ID: number,\r\n    BODY: string\r\n  };\r\n\r\nexport default () => {\r\n  const router = useRouter();\r\n  const { postId } = router.query;\r\n\r\n  console.log(\"postId :>> \", postId);\r\n\r\n  const IDS = {\r\n    BODY: \"body\",\r\n    POST_ID: \"postId\",\r\n  };\r\n\r\n  const [state, setState] = useState({\r\n    [IDS.MESSEGE]: \"\",\r\n    [IDS.POST_ID]: \"\",\r\n  });\r\n\r\n  console.log(\"state :>> \", state);\r\n\r\n  const onChange = (event) => {\r\n    const { id, value } = event.target;\r\n\r\n    setState((currentState) => ({\r\n      ...currentState,\r\n      [id]: value,\r\n    }));\r\n  };\r\n\r\n    const addComment = (event) => {\r\n      event.preventDefault();\r\n      axios({\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        data: JSON.stringify(state),\r\n        url: \"https://simple-blog-api.crew.red/comments\",\r\n      }).then((res) => console.log(res));\r\n    };\r\n\r\n  return (\r\n    <form onSubmit={addComment}>\r\n      <Input\r\n        id={IDS.MESSEGE}\r\n        value={state[IDS.MESSEGE]}\r\n        onChange={onChange}\r\n        placeholder=\"Comment...\"\r\n      />\r\n      <Btn type=\"submit\">Send comment</Btn>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst Input = styled.input`\r\n  padding-left: 25px;\r\n  font-size: 16px;\r\n  width: 549px;\r\n  height: 45px;\r\n  margin-top: 40px;\r\n  border: none;\r\n  border-radius: 10px;\r\n  box-shadow: inset 0 0 7px rgba(0, 0, 0, 0.2);\r\n`;\r\n\r\nconst Btn = styled.button`\r\n  margin-left: 12px;\r\n  border: none;\r\n  border-radius: 10px;\r\n  background: #fff;\r\n  width: 110px;\r\n  height: 45px;\r\n  box-shadow: 0px 0px 5px 0px rgba(0, 0, 0, 0.35);\r\n`;\r\n"]},"metadata":{},"sourceType":"module"}