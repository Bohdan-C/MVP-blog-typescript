{"ast":null,"code":"var _jsxFileName = \"C:\\\\mvp-blog-typescript\\\\pages\\\\posts\\\\[id].tsx\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from \"react\";\nimport { useRouter } from \"next/router\";\nimport styled from \"styled-components\";\nimport axios from \"axios\";\nimport { useDispatch } from \"react-redux\";\nimport { getPostsById } from \"../../src/redux/actions/actions\";\nimport { Navbar } from \"../../src/components/Navbar\";\nimport Comments from \"../../src/components/Comments\";\nexport default (() => {\n  // const [post, setPost] = useState([]);\n  const dispatch = useDispatch();\n  const router = useRouter();\n  const {\n    postId\n  } = router.query;\n  useEffect(() => {\n    dispatch(getPostsById);\n    axios.get(`https://simple-blog-api.crew.red/posts/${id}?_embed=comments`).then(data => {\n      setPost(data.data);\n    }).catch(err => {\n      console.log(\"Error!\", err);\n    });\n  }, [id]); //   React.useEffect(() => {\n  //     getPostsById(postId, dispatch)\n  // }, [postId]);\n  // const { post } = useSelector((state: InitialStateI) => { return { post: state.post } });\n\n  return __jsx(React.Fragment, null, __jsx(Navbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }), __jsx(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, __jsx(Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, post.title), __jsx(Description, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, post.body), __jsx(Comments, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  })));\n});\nconst Container = styled.div.withConfig({\n  displayName: \"id__Container\",\n  componentId: \"sc-1cqi0ja-0\"\n})([\"display:flex;flex-direction:column;align-items:center;margin:0 auto;margin-top:70px;width:1040px;\"]);\nconst Title = styled.h2.withConfig({\n  displayName: \"id__Title\",\n  componentId: \"sc-1cqi0ja-1\"\n})([\"width:700px;font-size:50px;margin-bottom:40px;\"]);\nconst Description = styled.p.withConfig({\n  displayName: \"id__Description\",\n  componentId: \"sc-1cqi0ja-2\"\n})([\"&:after{margin-top:40px;display:block;content:\\\"\\\";background:#000;height:2px;}width:700px;font-size:22px;\"]);","map":{"version":3,"sources":["C:/mvp-blog-typescript/pages/posts/[id].tsx"],"names":["React","useEffect","useRouter","styled","axios","useDispatch","getPostsById","Navbar","Comments","dispatch","router","postId","query","get","id","then","data","setPost","catch","err","console","log","post","title","body","Container","div","Title","h2","Description","p"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAAyC,aAAzC;AACA,SAASC,YAAT;AACA,SAASC,MAAT;AACA,OAAOC,QAAP;AAGA,gBAAe,MAAM;AACnB;AAEA,QAAMC,QAAQ,GAAGJ,WAAW,EAA5B;AACA,QAAMK,MAAM,GAAGR,SAAS,EAAxB;AACA,QAAM;AAAES,IAAAA;AAAF,MAAaD,MAAM,CAACE,KAA1B;AAEAX,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,QAAQ,CAACH,YAAD,CAAR;AACAF,IAAAA,KAAK,CACFS,GADH,CACQ,0CAAyCC,EAAG,kBADpD,EAEGC,IAFH,CAESC,IAAD,IAAU;AACdC,MAAAA,OAAO,CAACD,IAAI,CAACA,IAAN,CAAP;AACD,KAJH,EAKGE,KALH,CAKUC,GAAD,IAAS;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBF,GAAtB;AACD,KAPH;AAQD,GAVQ,EAUN,CAACL,EAAD,CAVM,CAAT,CAPmB,CAmBrB;AACA;AACA;AAEA;;AAEE,SACE,4BACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQQ,IAAI,CAACC,KAAb,CADF,EAEE,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAcD,IAAI,CAACE,IAAnB,CAFF,EAGE,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CAFF,CADF;AAUD,CAnCD;AAqCA,MAAMC,SAAS,GAAGtB,MAAM,CAACuB,GAAV;AAAA;AAAA;AAAA,yGAAf;AASA,MAAMC,KAAK,GAAGxB,MAAM,CAACyB,EAAV;AAAA;AAAA;AAAA,sDAAX;AAMA,MAAMC,WAAW,GAAG1B,MAAM,CAAC2B,CAAV;AAAA;AAAA;AAAA,kHAAjB","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useRouter } from \"next/router\";\r\nimport styled from \"styled-components\";\r\nimport axios from \"axios\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getPostsById } from \"../../src/redux/actions/actions\";\r\nimport { Navbar } from \"../../src/components/Navbar\";\r\nimport Comments from \"../../src/components/Comments\";\r\nimport {InitialStateI} from \"../../src/redux/reducers/reducer\"\r\n\r\nexport default () => {\r\n  // const [post, setPost] = useState([]);\r\n\r\n  const dispatch = useDispatch();\r\n  const router = useRouter();\r\n  const { postId } = router.query;\r\n\r\n  useEffect(() => {\r\n    dispatch(getPostsById)\r\n    axios\r\n      .get(`https://simple-blog-api.crew.red/posts/${id}?_embed=comments`)\r\n      .then((data) => {\r\n        setPost(data.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"Error!\", err);\r\n      });\r\n  }, [id]);\r\n\r\n//   React.useEffect(() => {\r\n//     getPostsById(postId, dispatch)\r\n// }, [postId]);\r\n\r\n// const { post } = useSelector((state: InitialStateI) => { return { post: state.post } });\r\n\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      <Container>\r\n        <Title>{post.title}</Title>\r\n        <Description>{post.body}</Description>\r\n        <Comments />\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  margin: 0 auto;\r\n  margin-top: 70px;\r\n  width: 1040px;\r\n`;\r\n\r\nconst Title = styled.h2`\r\n  width: 700px;\r\n  font-size: 50px;\r\n  margin-bottom: 40px;\r\n`;\r\n\r\nconst Description = styled.p`\r\n  &:after {\r\n    margin-top: 40px;\r\n    display: block;\r\n    content: \"\";\r\n    background: #000;\r\n    height: 2px;\r\n  }\r\n  width: 700px;\r\n  font-size: 22px;\r\n`;"]},"metadata":{},"sourceType":"module"}