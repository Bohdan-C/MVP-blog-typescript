{"ast":null,"code":"var _jsxFileName = \"C:\\\\mvp-blog-typescript\\\\pages\\\\posts\\\\createPost\\\\index.tsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState } from \"react\";\nimport { Navbar } from \"../../../src/components/Navbar\";\nimport Router from \"next/router\";\nimport styled from \"styled-components\";\nimport axios from \"axios\"; // import { addPost } from \"../../../src/redux/actions/actions\";\n\nconst IDS = {\n  TITLE: \"title\",\n  BODY: \"body\"\n};\nexport default (() => {\n  const {\n    0: state,\n    1: setState\n  } = useState({\n    [IDS.TITLE]: \"\",\n    [IDS.BODY]: \"\"\n  }); //   : React.ChangeEvent<HTMLInputElement>\n\n  const onChange = e => {\n    const {\n      id,\n      value\n    } = e.target;\n    setState(currentState => _objectSpread(_objectSpread({}, currentState), {}, {\n      [id]: value\n    }));\n  };\n\n  const addPost = event => {\n    axios({\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      data: JSON.stringify(state),\n      url: \"https://simple-blog-api.crew.red/posts\"\n    }).then(res => {\n      alert(\"Done\");\n      if (res) Router.push(\"/\");\n    });\n  };\n\n  return __jsx(React.Fragment, null, __jsx(Navbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }), __jsx(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, __jsx(Form, {\n    onSubmit: addPost,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, __jsx(Input, {\n    id: IDS.TITLE,\n    value: state[IDS.TITLE],\n    onChange: onChange,\n    placeholder: \"Title...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }), __jsx(Textarea, {\n    id: IDS.BODY,\n    value: state[IDS.BODY],\n    onChange: onChange,\n    placeholder: \"Post...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }), __jsx(Btn, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }, \"Submit\"))));\n});\nconst Container = styled.div`\n  display: flex;\n  justify-content: center;\n`;\nconst Form = styled.form`\n  display: flex;\n  flex-direction: column;\n`;\nconst Input = styled.input`\n  padding-left: 25px;\n  font-size: 16px;\n  width: 700px;\n  height: 45px;\n  margin-top: 40px;\n  border: none;\n  border-radius: 10px;\n  box-shadow: inset 0 0 7px rgba(0, 0, 0, 0.2);\n`;\nconst Textarea = styled.textarea`\n  padding-left: 25px;\n  padding-top: 15px;\n  font-size: 16px;\n  max-width: 700px;\n  min-width: 700px;\n  height: 45px;\n  margin-top: 40px;\n  border: none;\n  border-radius: 10px;\n  box-shadow: inset 0 0 7px rgba(0, 0, 0, 0.2);\n`;\nconst Btn = styled.button`\n  &:hover {\n    margin-top: 27px;\n  }\n  cursor: pointer;\n  margin-top: 30px;\n  width: 100px;\n  height: 30px;\n  border: none;\n  border-radius: 10px;\n  background: #fff;\n  box-shadow: 0px 4px 10px 0px rgba(0, 0, 0, 0.35);\n`;","map":{"version":3,"sources":["C:/mvp-blog-typescript/pages/posts/createPost/index.tsx"],"names":["React","useState","Navbar","Router","styled","axios","IDS","TITLE","BODY","state","setState","onChange","e","id","value","target","currentState","addPost","event","method","headers","data","JSON","stringify","url","then","res","alert","push","Container","div","Form","form","Input","input","Textarea","textarea","Btn","button"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAA2C,OAA3C;AACA,SAASC,MAAT;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;;AAEA,MAAMC,GAAG,GAAG;AACVC,EAAAA,KAAK,EAAE,OADG;AAEVC,EAAAA,IAAI,EAAE;AAFI,CAAZ;AAKA,gBAAe,MAAM;AACnB,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBT,QAAQ,CAAC;AACjC,KAACK,GAAG,CAACC,KAAL,GAAa,EADoB;AAEjC,KAACD,GAAG,CAACE,IAAL,GAAY;AAFqB,GAAD,CAAlC,CADmB,CAMnB;;AAEA,QAAMG,QAAQ,GAAIC,CAAD,IAAO;AACtB,UAAM;AAAEC,MAAAA,EAAF;AAAMC,MAAAA;AAAN,QAAgBF,CAAC,CAACG,MAAxB;AAEAL,IAAAA,QAAQ,CAAEM,YAAD,oCACJA,YADI;AAEP,OAACH,EAAD,GAAMC;AAFC,MAAD,CAAR;AAID,GAPD;;AASA,QAAMG,OAAO,GAAIC,KAAD,IAA6C;AAC3Db,IAAAA,KAAK,CAAC;AACJc,MAAAA,MAAM,EAAE,MADJ;AAEJC,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB,OAFL;AAGJC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAed,KAAf,CAHF;AAIJe,MAAAA,GAAG,EAAE;AAJD,KAAD,CAAL,CAKGC,IALH,CAKSC,GAAD,IAAS;AACfC,MAAAA,KAAK,CAAC,MAAD,CAAL;AACA,UAAID,GAAJ,EAASvB,MAAM,CAACyB,IAAP,CAAY,GAAZ;AACV,KARD;AASD,GAVD;;AAYA,SACE,4BACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,QAAQ,EAAEX,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD;AACE,IAAA,EAAE,EAAEX,GAAG,CAACC,KADV;AAEE,IAAA,KAAK,EAAEE,KAAK,CAACH,GAAG,CAACC,KAAL,CAFd;AAGE,IAAA,QAAQ,EAAEI,QAHZ;AAIE,IAAA,WAAW,EAAC,UAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAOE,MAAC,QAAD;AACE,IAAA,EAAE,EAAEL,GAAG,CAACE,IADV;AAEE,IAAA,KAAK,EAAEC,KAAK,CAACH,GAAG,CAACE,IAAL,CAFd;AAGE,IAAA,QAAQ,EAAEG,QAHZ;AAIE,IAAA,WAAW,EAAC,SAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,EAaE,MAAC,GAAD;AAAK,IAAA,IAAI,EAAC,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAbF,CADF,CAFF,CADF;AAsBD,CAnDD;AAqDA,MAAMkB,SAAS,GAAGzB,MAAM,CAAC0B,GAAI;;;CAA7B;AAKA,MAAMC,IAAI,GAAG3B,MAAM,CAAC4B,IAAK;;;CAAzB;AAKA,MAAMC,KAAK,GAAG7B,MAAM,CAAC8B,KAAM;;;;;;;;;CAA3B;AAWA,MAAMC,QAAQ,GAAG/B,MAAM,CAACgC,QAAS;;;;;;;;;;;CAAjC;AAaA,MAAMC,GAAG,GAAGjC,MAAM,CAACkC,MAAO;;;;;;;;;;;;CAA1B","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Navbar } from \"../../../src/components/Navbar\";\r\nimport Router from \"next/router\";\r\nimport styled from \"styled-components\";\r\nimport axios from \"axios\";\r\n\r\n// import { addPost } from \"../../../src/redux/actions/actions\";\r\n\r\nconst IDS = {\r\n  TITLE: \"title\",\r\n  BODY: \"body\",\r\n};\r\n\r\nexport default () => {\r\n  const [state, setState] = useState({\r\n    [IDS.TITLE]: \"\",\r\n    [IDS.BODY]: \"\",\r\n  });\r\n\r\n  //   : React.ChangeEvent<HTMLInputElement>\r\n\r\n  const onChange = (e) => {\r\n    const { id, value } = e.target;\r\n\r\n    setState((currentState) => ({\r\n      ...currentState,\r\n      [id]: value,\r\n    }));\r\n  };\r\n\r\n  const addPost = (event: React.FormEvent<HTMLFormElement>) => {\r\n    axios({\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      data: JSON.stringify(state),\r\n      url: \"https://simple-blog-api.crew.red/posts\",\r\n    }).then((res) => {\r\n      alert(\"Done\");\r\n      if (res) Router.push(\"/\");\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      <Container>\r\n        <Form onSubmit={addPost}>\r\n          <Input\r\n            id={IDS.TITLE}\r\n            value={state[IDS.TITLE]}\r\n            onChange={onChange}\r\n            placeholder=\"Title...\"\r\n          />\r\n          <Textarea\r\n            id={IDS.BODY}\r\n            value={state[IDS.BODY]}\r\n            onChange={onChange}\r\n            placeholder=\"Post...\"\r\n          />\r\n          <Btn type=\"submit\">Submit</Btn>\r\n        </Form>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nconst Form = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  padding-left: 25px;\r\n  font-size: 16px;\r\n  width: 700px;\r\n  height: 45px;\r\n  margin-top: 40px;\r\n  border: none;\r\n  border-radius: 10px;\r\n  box-shadow: inset 0 0 7px rgba(0, 0, 0, 0.2);\r\n`;\r\n\r\nconst Textarea = styled.textarea`\r\n  padding-left: 25px;\r\n  padding-top: 15px;\r\n  font-size: 16px;\r\n  max-width: 700px;\r\n  min-width: 700px;\r\n  height: 45px;\r\n  margin-top: 40px;\r\n  border: none;\r\n  border-radius: 10px;\r\n  box-shadow: inset 0 0 7px rgba(0, 0, 0, 0.2);\r\n`;\r\n\r\nconst Btn = styled.button`\r\n  &:hover {\r\n    margin-top: 27px;\r\n  }\r\n  cursor: pointer;\r\n  margin-top: 30px;\r\n  width: 100px;\r\n  height: 30px;\r\n  border: none;\r\n  border-radius: 10px;\r\n  background: #fff;\r\n  box-shadow: 0px 4px 10px 0px rgba(0, 0, 0, 0.35);\r\n`;\r\n"]},"metadata":{},"sourceType":"module"}