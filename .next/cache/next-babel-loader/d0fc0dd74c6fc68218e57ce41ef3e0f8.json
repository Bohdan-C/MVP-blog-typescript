{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { POSTS_FAIL, POSTS_LOADING, POSTS_SUCCESS, POST_SUCCESS } from \"../types/types\";\n// export interface state {\n//   posts: Array<post>,\n//   post?: post,\n//   title: string,\n//   body: string,\n//   comment: string,\n//   edit: boolean\n// };\nconst initialState = {\n  posts: [],\n  isLoading: false,\n  comment: string\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case POSTS_LOADING:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoading: !state.isLoading\n      });\n\n    case POSTS_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        posts: [...action.payload]\n      });\n\n    case POSTS_FAIL:\n      return state;\n\n    case POST_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        post: action.post\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/mvp-blog-typescript/src/redux/reducers/reducer.ts"],"names":["POSTS_FAIL","POSTS_LOADING","POSTS_SUCCESS","POST_SUCCESS","initialState","posts","isLoading","comment","string","reducer","state","action","type","payload","post"],"mappings":";;;;;;AAAA,SACEA,UADF,EAEEC,aAFF,EAGEC,aAHF,EAIEC,YAJF;AAwBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,MAAMC,YAA2B,GAAG;AAClCC,EAAAA,KAAK,EAAE,EAD2B;AAElCC,EAAAA,SAAS,EAAE,KAFuB;AAGlCC,EAAAA,OAAO,EAAEC;AAHyB,CAApC;;AAMA,MAAMC,OAAO,GAAG,CAACC,KAAoB,GAAGN,YAAxB,EAAsCO,MAAtC,KAAiD;AAC/D,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKX,aAAL;AACE,6CAAYS,KAAZ;AAAmBJ,QAAAA,SAAS,EAAE,CAACI,KAAK,CAACJ;AAArC;;AAEF,SAAKJ,aAAL;AACE,6CAAYQ,KAAZ;AAAmBL,QAAAA,KAAK,EAAE,CAAC,GAAGM,MAAM,CAACE,OAAX;AAA1B;;AAEF,SAAKb,UAAL;AACE,aAAOU,KAAP;;AAEF,SAAKP,YAAL;AACE,6CAAYO,KAAZ;AAAmBI,QAAAA,IAAI,EAAEH,MAAM,CAACG;AAAhC;;AAEF;AACE,aAAOJ,KAAP;AAdJ;AAgBD,CAjBD;;AAmBA,eAAeD,OAAf","sourcesContent":["import {\r\n  POSTS_FAIL,\r\n  POSTS_LOADING,\r\n  POSTS_SUCCESS,\r\n  POST_SUCCESS,\r\n} from \"../types/types\";\r\nexport interface post {\r\n  id: number;\r\n  title: string;\r\n  body: string;\r\n  comments?: Array<comment>;\r\n}\r\nexport interface comment {\r\n  id: number;\r\n  postId: number;\r\n  body: string;\r\n}\r\nexport interface InitialStateI {\r\n  posts: Array<post>;\r\n  isLoading: boolean;\r\n  comment: string,\r\n  post?: post;\r\n}\r\n\r\n// export interface state {\r\n//   posts: Array<post>,\r\n//   post?: post,\r\n//   title: string,\r\n//   body: string,\r\n//   comment: string,\r\n//   edit: boolean\r\n// };\r\n\r\nconst initialState: InitialStateI = {\r\n  posts: [],\r\n  isLoading: false,\r\n  comment: string,\r\n};\r\n\r\nconst reducer = (state: InitialStateI = initialState, action) => {\r\n  switch (action.type) {\r\n    case POSTS_LOADING:\r\n      return { ...state, isLoading: !state.isLoading };\r\n\r\n    case POSTS_SUCCESS:\r\n      return { ...state, posts: [...action.payload] };\r\n\r\n    case POSTS_FAIL:\r\n      return state;\r\n\r\n    case POST_SUCCESS:\r\n      return { ...state, post: action.post };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n"]},"metadata":{},"sourceType":"module"}